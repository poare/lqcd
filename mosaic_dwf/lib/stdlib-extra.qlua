#!/usr/bin/env qlua

require "stdlib"
require "string"

-- Extra stdlib functions (Tej)

-- Formatted print with automatic newline
function printfln(fmt, ...)
   return printf(fmt .. "\n", ...)
end

-- Make a sequential index over lattice
function seqindex(L)
   local x = L:Int(0)
   for i = 0, #L-1 do
      x = x*L[i] + L:pcoord(i)
   end
   return x
end

-- Calculate lattice volume
function volume(L)
   local vol = 1
   for i = 0, #L-1 do
      vol = vol * L[i]
   end
   return vol
end

-- Get local ColorMatrix identity
function local_SUn_ident()
   local out = qcd.ColorMatrixN(qcd.Nc)
   for i = 0, qcd.Nc-1 do
      out[{a=i, b=i}] = complex(1,0)
   end
   return out
end

-- Project matrix or lattice matrix to su(n) algebra by making it
-- Hermitian and traceless.
function tosun(L, X)
   local Y = (X + X:adjoin()) / 2.0
   return (Y - Y:trace() / qcd.Nc * L:ColorMatrix(complex(1,0)))
end
function local_tosun(X)
   local Y = (X + X:adjoin()) / 2.0
   return (Y - Y:trace() / qcd.Nc * local_SUn_ident())
end

-- Recursively print out table key-value pairs
function printTab(tab, indent)
   for k,v in pairs(tab) do
      if indent ~= nil then
         printf(string.rep("  ", indent))
      end
      print(k,v)
      if type(v) == "table" then
         if indent ~= nil then
            printTab(v, indent+1)
         else
            printTab(v, 1)
         end
      end
   end
end

-- Add standard Nc to qcd, since it seems to be undefined in my current
-- build. Only do so if it was undefined, in case I fix my build (unlikely!)
if qcd.Nc == nil then
   qcd.Nc = 3
end
